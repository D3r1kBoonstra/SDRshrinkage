\documentclass{article}

\usepackage{mathtools}
\usepackage{amssymb}
\usepackage{geometry}
\geometry{margin = 1in}
\usepackage{graphicx}
\usepackage{booktabs}
\usepackage{longtable}
\usepackage{array}
\usepackage{multirow}
\usepackage{wrapfig}
\usepackage{float}
\usepackage{colortbl}
\usepackage{pdflscape}
\usepackage{tabu}
\usepackage{threeparttable}
\usepackage{threeparttablex}
\usepackage[normalem]{ulem}
\usepackage{makecell}
\usepackage{xcolor}

\begin{document}

% Title
\begin{center}
Singular Dimension Analysis of $\widehat{\boldsymbol{M}}$ Matrices
\end{center}

<<echo = FALSE>>=
knitr::opts_chunk$set(echo = FALSE,
                      error = TRUE,
                      collapse = TRUE,
                      message = FALSE,
                      fig.path = "sing_figures/",
                      fig.height = 8)
@

<<results='hide'>>=
library("tidyverse");library("qqplotr");theme_set(theme_minimal())
mats <- miscset::lload("./saved_sims", pattern = "_mats.RData")
@

<<>>=
## Get upper triangle of the correlation matrix
upper_tri <- function(x){
  x[lower.tri(x)]<- NA
  #return
  x
}

sing_analysis <- function(mats_list, title = "Dataset"){
  methods <- c("MLE", "Haff", "Wang", "Bodnar", "MRY")
  d <- nrow(mats_list[[1]])
  
  sing_plot <- mats_list |> 
    lapply(function(x) svd(x)$d) |> 
    do.call(cbind, args = _) |> 
    as.data.frame() |> 
    mutate("d" = 1:n()) |> 
    pivot_longer(-d) |> 
    ggplot(aes(d, value, color = as_factor(name)))+
    geom_point()+
    geom_line()+
    facet_wrap(~as_factor(name), ncol = 1, scales = "free_y")+
    scale_x_continuous(breaks = 1:d)+
    labs(x = "Singular Dimensions", y = "Singular Value", color = "Precision")+
    scale_color_manual(values = c("purple", "#6495ED", "#21918c", "#5ec962", "#fde725"))+
    theme(strip.text = element_blank())
  
  vects_plot <- lapply(mats_list, function(x) {
  (cor(svd(x)$u) |> 
      acos() * (180 / pi))|> 
    upper_tri() |> 
        reshape2::melt(na.rm = TRUE) |> 
        filter(Var1 != Var2)
}) |> 
  do.call(rbind, args = _) |> 
  mutate("precision" = rep(methods, each = n()/length(methods)) |> 
           as_factor()) |> 
  ggplot(aes(Var1, Var2, fill = value)) +
    geom_tile(color = "black")+
    coord_flip()+
    facet_wrap(~precision, nrow = 1) +
    scale_fill_gradient2(low = "red", high = "#52c569", mid = "white", midpoint = 90)+
    scale_x_continuous(breaks = 1:d)+
    theme(strip.background = element_rect(fill="lightgrey"))+
    labs(y = "Singular Dimensions", x = "Singular Dimensions", fill = "Angle", title = paste0(title, " Dataset"))
  
  ## Return
  # ggpubr::ggarrange(vects_plot, sing_plot, ncol = 1, align = "v")
  ggpubr::ggarrange(vects_plot, sing_plot, ncol = 1)
}
@

<<warning=FALSE>>=
dataset_names <- c("Autism","Bands", "Breast Cancer", "Dry Beans", "Divorce", "Ecoli", "Penguins","SPECT Heart",  "Wheat")
for(i in c(1:3, 5, 8, 7, 9, 6, 4)){
  print(sing_analysis(mats[[i]], title = dataset_names[[i]]))
}
@

<<>>=
# print_f <- function(mat_list) {
#   methods <- c("MLE", "Haff", "Wang", "Bodnar", "MRY")
#   n_methods <- length(methods)
#   
#   for (j in 1:n_methods) {
#     dimnames(mat_list[[j]]) <- NULL
#     mat_list[[j]] |>
#       round(2) |>
#       knitr::kable(caption = paste0(methods[[j]])) |>
#                      print()
#   }
# }
# 
# print_f2 <- function(mat_list) {
#   methods <- c("MLE", "Haff", "Wang", "Bodnar", "MRY")
#   n_methods <- length(methods)
#   
#   for (j in 1:n_methods) {
#     dimnames(mat_list[[j]]) <- NULL
#     t(svd(mat_list[[j]])$u) |> 
#       round(2) |> 
#       knitr::kable(caption = paste0(methods[[j]])) |>
#                      print()
#   }
# }
# 
# mats[[1]] |> 
#   print_f2()
@




\end{document}
